}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used,FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else { }
}
i
tree
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used,FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else { }
}
i
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else { }
}
i
tree
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {sum(dist2[i,1:2] %in% nod.used[,1]) }
}
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(sum(dist2[i,1:2] %in% nod.used[,1])) }
}
sum(dist2[i,1:2] %in% nod.used[,1])
unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])
unique(nod.used[fil2,2])
nod.used[fil1,2]
tree
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(sum(dist2[i,1:2] %in% nod.used[,1]),i) }
}
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(c(sum(dist2[i,1:2] %in% nod.used[,1]),i)) }
}
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
for(i in 1:(n-1)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(c(sum(dist2[i,1:2] %in% nod.used[,1]),i)) }
}
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <-1
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(c(sum(dist2[i,1:2] %in% nod.used[,1]),i)) }
tree
i <-2
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
fil1
fil2
dist2[i,]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(c(sum(dist2[i,1:2] %in% nod.used[,1]),i)) }
tree
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <-2
for(i in 1:length(dist2)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else {print(c(sum(dist2[i,1:2] %in% nod.used[,1]),i)) }
}
tree
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <-2
for(i in 1:length(dist2)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else { }
}
i
dist2[i,1]
data("iris")
data <- as.matrix(iris)
d <- as.matrix(dist(data[,1:4], method = "euclidian"))
dist <- matrix(nrow = dim(d)[1]*dim(d)[2],ncol = 3)
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
k <- j+(i-1)*dim(d)[2]
dist[k,] <- c(i,j,d[i,j])
}
}
dist <- dist[order(dist[,3]),]
dist2 <- dist[dist[,1]!=dist[,2],]
n <- dim(d)[1]
nod.used <- matrix(nrow=0,ncol=2)
tree <- matrix(nrow=n-1,ncol=3)
set <- seq(from=1, to=floor(n/2), by=1)
r <- 1
i <-2
for(i in 1:nrow(dist2)) {
fil1 <- nod.used[,1]==dist2[i,1]
fil2 <- nod.used[,1]==dist2[i,2]
if (sum(dist2[i,1:2] %in% nod.used[,1]) == 0) {
tree[r,] <- dist2[i,]
l <- max(nod.used[,2],0) + 1
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (sum(dist2[i,1:2] %in% nod.used[,1]) == 1) {
tree[r,] <- dist2[i,]
l <- unique(nod.used[dist2[i,c(dist2[i,1:2] %in% nod.used[,1],FALSE)]==nod.used[,1],2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
r <- r + 1
} else if (unique(nod.used[fil1,2])!=unique(nod.used[fil2,2])) {
tree[r,] <- dist2[i,]
l <- min(nod.used[fil1,2],nod.used[fil2,2])
m <- max(nod.used[fil1,2],nod.used[fil2,2])
nod.used <- unique(rbind(nod.used,c(dist2[i,1],l),c(dist2[i,2],l)))
nod.used[nod.used[,2]==m,2] <- l
r <- r + 1
} else { }
}
tree
nod.used
order(nod.used[,1])
sort(nod.used[,1])
tree
dist2
